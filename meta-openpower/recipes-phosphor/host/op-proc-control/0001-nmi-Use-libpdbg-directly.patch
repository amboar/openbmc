From 219e412941279611c48cbfd247e911c58b404515 Mon Sep 17 00:00:00 2001
From: Andrew Jeffery <andrew@aj.id.au>
Date: Fri, 2 Aug 2019 18:45:26 +0930
Subject: [PATCH] nmi: Use libpdbg directly

This avoids calling DBus to run a systemd unit that is effectively a
shell script when we already have libpdbg on the system anyway.

Signed-off-by: Andrew Jeffery <andrew@aj.id.au>
Change-Id: I9a36c38f075d402b9bc406433475a371d1cdbe62
---
 Makefile.am       |  3 +--
 configure.ac      |  3 ++-
 nmi.service.in    | 10 ----------
 nmi_interface.cpp | 29 +++++++++++------------------
 4 files changed, 14 insertions(+), 31 deletions(-)
 delete mode 100644 nmi.service.in

diff --git a/Makefile.am b/Makefile.am
index 1280311793fb..d9760ca113a4 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -2,8 +2,7 @@ AM_DEFAULT_SOURCE_EXT = .cpp
 
 systemdsystemunit_DATA = \
   pcie-poweroff@.service \
-  xyz.openbmc_project.Control.Host.NMI.service \
-  nmi.service
+  xyz.openbmc_project.Control.Host.NMI.service
 
 bin_PROGRAMS = \
 	openpower-proc-control \
diff --git a/configure.ac b/configure.ac
index ece059193de1..ce8e755a81ec 100644
--- a/configure.ac
+++ b/configure.ac
@@ -45,6 +45,8 @@ AC_CONFIG_FILES([Makefile.generated],
     [${srcdir}/gen_makefile.sh ${srcdir} "$myChips" > Makefile.generated],
     [myChips="$CHIPS"])
 
+AC_CHECK_LIB([pdbg], [thread_sreset_all])
+
 PKG_CHECK_MODULES([SYSTEMD], [libsystemd >= 221])
 PKG_CHECK_MODULES([PHOSPHOR_LOGGING], [phosphor-logging])
 PKG_CHECK_MODULES([PHOSPHOR_DBUS_INTERFACES], [phosphor-dbus-interfaces])
@@ -68,5 +70,4 @@ AS_IF([test "x$with_systemdsystemunitdir" != "xno"],
 AC_CONFIG_FILES([Makefile test/Makefile])
 AC_CONFIG_FILES([pcie-poweroff@.service])
 AC_CONFIG_FILES([xyz.openbmc_project.Control.Host.NMI.service])
-AC_CONFIG_FILES([nmi.service])
 AC_OUTPUT
diff --git a/nmi.service.in b/nmi.service.in
deleted file mode 100644
index 304faea35560..000000000000
--- a/nmi.service.in
+++ /dev/null
@@ -1,10 +0,0 @@
-[Unit]
-Description=Enable Open Power NMI service
-
-[Service]
-Type=oneshot
-RemainAfterExit=no
-ExecStart=@bindir@/pdbg -a stop
-ExecStart=@bindir@/pdbg -a sreset
-SyslogIdentifier=openpower-proc-nmi
-
diff --git a/nmi_interface.cpp b/nmi_interface.cpp
index aea38ae2fd52..e9c97f46ce94 100644
--- a/nmi_interface.cpp
+++ b/nmi_interface.cpp
@@ -19,6 +19,7 @@
 #include <phosphor-logging/elog-errors.hpp>
 #include <phosphor-logging/elog.hpp>
 #include <xyz/openbmc_project/Common/error.hpp>
+#include <libpdbg.h>
 
 namespace openpower
 {
@@ -32,27 +33,19 @@ NMI::NMI(sdbusplus::bus::bus& bus, const char* path) :
 
 void NMI::nMI()
 {
-    using namespace phosphor::logging;
-    using sdbusplus::exception::SdBusError;
-    using InternalFailure =
-        sdbusplus::xyz::openbmc_project::Common::Error::InternalFailure;
+    struct pdbg_target *target;
+    int rc;
 
-    constexpr auto SYSTEMD_SERVICE = "org.freedesktop.systemd1";
-    constexpr auto SYSTEMD_OBJ_PATH = "/org/freedesktop/systemd1";
-    constexpr auto SYSTEMD_INTERFACE = "org.freedesktop.systemd1.Manager";
+    pdbg_for_each_class_target("thread", target) {
+	if (pdbg_target_status(target) != PDBG_TARGET_ENABLED)
+	    continue;
 
-    auto method = bus.new_method_call(SYSTEMD_SERVICE, SYSTEMD_OBJ_PATH,
-                                      SYSTEMD_INTERFACE, "StartUnit");
-    method.append("nmi.service", "replace");
-    try
-    {
-        bus.call_noreply(method);
-    }
-    catch (const SdBusError& e)
-    {
-        log<level::ALERT>("Error in starting NMI service. ");
-        report<InternalFailure>();
+	thread_stop(target);
     }
+
+    rc = thread_sreset_all();
+    if (rc < 0)
+        printf("Failed to sreset all threads: %d\n", rc);
 }
 } // namespace proc
 } // namespace openpower
-- 
2.20.1

